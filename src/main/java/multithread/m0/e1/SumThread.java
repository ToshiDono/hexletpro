package multithread.m0.e1;

import java.util.Arrays;

/**
 * Home work of Module 0 Lesson 1
 *
 * В Вашей первой практической работе, Вам предстоит создать поток, который занимается суммированием элементов массива.
 * Само собой мы не будет проверять те случаи когда сумма массива выходит за рамки допустимы значений int,
 * а так же мы не будем рассматривать те случаи когда массив является null.
 * Единственное, что Вам нужно будет реализовать, это класс который может суммировать все элементы массива в отдельном потоке.
 *
 * А теперь более детально:
 *
 * Класс который Вам нужно реализовать называется SumThread и наследуется от Thread, его API состоит из следующих методов:
 *
 * SumThread(final int[] toSum) - конструктор который принимает на вход массив, который нужно просуммировать;
 * public int getResult() - метод который используется для того что бы получить результат суммирования,
 * после того как поток закончил свое выполнение.
 * Что бы посмотреть как Ваш класс будет использован, достаточно заглянуть в метод validateSummThread класса: Main.
 */
public class SumThread extends Thread {
    private int[] arr;
    private int sum;

   public SumThread(final int[] toSum){
       this.arr = toSum;
       sum = 0;
   }

    public int getResult(){
       return sum;
    }

    @Override
    public void run(){
        sum = Arrays.stream(arr).sum();
    }
}
